package api

import "testing"

// 以下の2つの定義をvalidatorの実装から持ってくる
// https://github.com/go-playground/validator
// https://github.com/go-playground/validator/blob/v10.26.0/baked_in.go
var bakedTags = []string{
	// bakedInAliases
	// https://github.com/go-playground/validator/blob/72c45031a9e850aa51997745e8f8afa2723092c0/baked_in.go#L70
	"iscolor",
	"country_code",
	"eu_country_code",

	// bakedInValidators
	// https://github.com/go-playground/validator/blob/72c45031a9e850aa51997745e8f8afa2723092c0/baked_in.go#L79
	"required",
	"required_if",
	"required_unless",
	"skip_unless",
	"required_with",
	"required_with_all",
	"required_without",
	"required_without_all",
	"excluded_if",
	"excluded_unless",
	"excluded_with",
	"excluded_with_all",
	"excluded_without",
	"excluded_without_all",
	"isdefault",
	"len",
	"min",
	"max",
	"eq",
	"eq_ignore_case",
	"ne",
	"ne_ignore_case",
	"lt",
	"lte",
	"gt",
	"gte",
	"eqfield",
	"eqcsfield",
	"necsfield",
	"gtcsfield",
	"gtecsfield",
	"ltcsfield",
	"ltecsfield",
	"nefield",
	"gtefield",
	"gtfield",
	"ltefield",
	"ltfield",
	"fieldcontains",
	"fieldexcludes",
	"alpha",
	"alphanum",
	"alphaunicode",
	"alphanumunicode",
	"boolean",
	"numeric",
	"number",
	"hexadecimal",
	"hexcolor",
	"rgb",
	"rgba",
	"hsl",
	"hsla",
	"e164",
	"email",
	"url",
	"http_url",
	"uri",
	"urn_rfc2141",
	"file",
	"filepath",
	"base32",
	"base64",
	"base64url",
	"base64rawurl",
	"contains",
	"containsany",
	"containsrune",
	"excludes",
	"excludesall",
	"excludesrune",
	"startswith",
	"endswith",
	"startsnotwith",
	"endsnotwith",
	"image",
	"isbn",
	"isbn10",
	"isbn13",
	"issn",
	"eth_addr",
	"eth_addr_checksum",
	"btc_addr",
	"btc_addr_bech32",
	"uuid",
	"uuid3",
	"uuid4",
	"uuid5",
	"uuid_rfc4122",
	"uuid3_rfc4122",
	"uuid4_rfc4122",
	"uuid5_rfc4122",
	"ulid",
	"md4",
	"md5",
	"sha256",
	"sha384",
	"sha512",
	"ripemd128",
	"ripemd160",
	"tiger128",
	"tiger160",
	"tiger192",
	"ascii",
	"printascii",
	"multibyte",
	"datauri",
	"latitude",
	"longitude",
	"ssn",
	"ipv4",
	"ipv6",
	"ip",
	"cidrv4",
	"cidrv6",
	"cidr",
	"tcp4_addr",
	"tcp6_addr",
	"tcp_addr",
	"udp4_addr",
	"udp6_addr",
	"udp_addr",
	"ip4_addr",
	"ip6_addr",
	"ip_addr",
	"unix_addr",
	"mac",
	"hostname",
	"hostname_rfc1123",
	"fqdn",
	"unique",
	"oneof",
	"oneofci",
	"html",
	"html_encoded",
	"url_encoded",
	"dir",
	"dirpath",
	"json",
	"jwt",
	"hostname_port",
	"port",
	"lowercase",
	"uppercase",
	"datetime",
	"timezone",
	"iso3166_1_alpha2",
	"iso3166_1_alpha2_eu",
	"iso3166_1_alpha3",
	"iso3166_1_alpha3_eu",
	"iso3166_1_alpha_numeric",
	"iso3166_1_alpha_numeric_eu",
	"iso3166_2",
	"iso4217",
	"iso4217_numeric",
	"bcp47_language_tag",
	"postcode_iso3166_alpha2",
	"postcode_iso3166_alpha2_field",
	"bic",
	"semver",
	"dns_rfc1035_label",
	"credit_card",
	"cve",
	"luhn_checksum",
	"mongodb",
	"mongodb_connection_string",
	"cron",
	"spicedb",
	"ein",
	"validateFn", // Verify if the method Validate() error does not return an error (or any specified method)
}

func Test_validationMsg_CheckAllTags(t *testing.T) {

	renderer := &ProblemDetailsRenderer{}

	var all bool = true
	for _, bakedTag := range bakedTags {
		_, ok := renderer.verbForTag(bakedTag)
		if !ok {
			t.Errorf("tag '%s' is undefined in switch-case.", bakedTag)
			all = false
		}
	}
	if all {
		t.Logf("all tags are defined")
	}
}
